{"code":"import { __assign } from \"tslib\";\r\nimport { gzip } from 'pako';\r\nimport { ImageSender } from './saEvent';\r\nimport { version } from '../../package.json';\r\nvar ArrayProto = Array.prototype;\r\nvar nativeForEach = ArrayProto.forEach;\r\nvar slice = ArrayProto.slice;\r\nvar nativeIsArray = Array.isArray;\r\nvar ObjProto = Object.prototype;\r\nvar toString = ObjProto.toString;\r\nvar hasOwnProperty = ObjProto.hasOwnProperty;\r\nvar breaker = {};\r\n/**\r\n * script 动态加载 js\r\n * @param para\r\n */\r\nexport var loadScript = function (para) {\r\n    para = Object.assign({\r\n        success: function () { },\r\n        error: function () { },\r\n        appendCall: function (g) {\r\n            document.getElementsByTagName('head')[0].appendChild(g);\r\n        },\r\n    }, para);\r\n    var g = null;\r\n    if (para.type === 'css') {\r\n        g = document.createElement('link');\r\n        g.rel = 'stylesheet';\r\n        g.href = para.url;\r\n    }\r\n    if (para.type === 'js') {\r\n        g = document.createElement('script');\r\n        g.async = 'async';\r\n        g.setAttribute('charset', 'UTF-8');\r\n        g.src = para.url;\r\n        g.type = 'text/javascript';\r\n    }\r\n    g.onload = g.onreadystatechange = function () {\r\n        if (!this.readyState ||\r\n            this.readyState === 'loaded' ||\r\n            this.readyState === 'complete') {\r\n            para.success();\r\n            g.onload = g.onreadystatechange = null;\r\n        }\r\n    };\r\n    g.onerror = function () {\r\n        para.error();\r\n        g.onerror = null;\r\n    };\r\n    para.appendCall(g);\r\n};\r\n/**\r\n * 判断是否字符串\r\n * @param obj\r\n * @returns\r\n */\r\nexport function isString(obj) {\r\n    return toString.call(obj) == '[object String]';\r\n}\r\n/**\r\n * 判断是否对象\r\n * @param obj\r\n * @returns\r\n */\r\nexport var isObject = function (obj) {\r\n    if (obj == null)\r\n        return false;\r\n    return toString.call(obj) == '[object Object]';\r\n};\r\n/**\r\n * 判断是否函数方法\r\n * @param f\r\n * @returns\r\n */\r\nexport function isFunction(f) {\r\n    if (!f)\r\n        return false;\r\n    var type = toString.call(f);\r\n    return type == '[object Function]' || type == '[object AsyncFunction]';\r\n}\r\n/**\r\n * 判断是否数字类型\r\n * @param obj\r\n * @returns\r\n */\r\nexport function isNumber(obj) {\r\n    return toString.call(obj) == '[object Number]' && /[\\d\\.]+/.test(String(obj));\r\n}\r\n/**\r\n * 判断是否 dom 类型\r\n * @param obj\r\n * @returns\r\n */\r\nexport function isElement(obj) {\r\n    return !!(obj && obj.nodeType === 1);\r\n}\r\nexport function isEmptyObject(obj) {\r\n    if (isObject(obj)) {\r\n        for (var key in obj) {\r\n            if (hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function isUndefined(obj) {\r\n    return obj === void 0;\r\n}\r\nfunction map(obj, iterator) {\r\n    var results = [];\r\n    if (obj == null) {\r\n        return results;\r\n    }\r\n    if (Array.prototype.map && obj.map === Array.prototype.map) {\r\n        return obj.map(iterator);\r\n    }\r\n    each(obj, function (value, index, list) {\r\n        results.push(iterator(value, index, list));\r\n    });\r\n    return results;\r\n}\r\nfunction base64Decode(data) {\r\n    var arr = [];\r\n    try {\r\n        arr = map(atob(data).split(''), function (c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        });\r\n    }\r\n    catch (e) {\r\n        arr = [];\r\n    }\r\n    try {\r\n        return decodeURIComponent(arr.join(''));\r\n    }\r\n    catch (e) {\r\n        return arr.join('');\r\n    }\r\n}\r\nexport function base64Encode(data) {\r\n    var unit = new Uint16Array(data);\r\n    var result = '';\r\n    try {\r\n        result = btoa(String.fromCharCode.apply(null, unit));\r\n    }\r\n    catch (error) {\r\n        result = data;\r\n    }\r\n    return result;\r\n}\r\nfunction hashCode(str) {\r\n    if (typeof str !== 'string') {\r\n        return 0;\r\n    }\r\n    var hash = 0;\r\n    var char = null;\r\n    if (str.length == 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < str.length; i++) {\r\n        char = str.charCodeAt(i);\r\n        hash = (hash << 5) - hash + char;\r\n        hash = hash & hash;\r\n    }\r\n    return hash;\r\n}\r\nfunction isDate(obj) {\r\n    return toString.call(obj) == '[object Date]';\r\n}\r\nfunction isSupportCors() {\r\n    if (typeof window.XMLHttpRequest === 'undefined') {\r\n        return false;\r\n    }\r\n    if ('withCredentials' in new XMLHttpRequest()) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * get userNative\r\n * @returns\r\n */\r\nexport function getUA() {\r\n    var Sys = {};\r\n    var ua = navigator.userAgent.toLowerCase();\r\n    var s;\r\n    if ((s = ua.match(/opera.([\\d.]+)/))) {\r\n        Sys.opera = Number(s[1].split('.')[0]);\r\n    }\r\n    else if ((s = ua.match(/msie ([\\d.]+)/))) {\r\n        Sys.ie = Number(s[1].split('.')[0]);\r\n    }\r\n    else if ((s = ua.match(/edge.([\\d.]+)/))) {\r\n        Sys.edge = Number(s[1].split('.')[0]);\r\n    }\r\n    else if ((s = ua.match(/firefox\\/([\\d.]+)/))) {\r\n        Sys.firefox = Number(s[1].split('.')[0]);\r\n    }\r\n    else if ((s = ua.match(/chrome\\/([\\d.]+)/))) {\r\n        Sys.chrome = Number(s[1].split('.')[0]);\r\n    }\r\n    else if ((s = ua.match(/version\\/([\\d.]+).*safari/))) {\r\n        Sys.safari = Number(s[1].match(/^\\d*.\\d*/));\r\n    }\r\n    else if ((s = ua.match(/trident\\/([\\d.]+)/))) {\r\n        Sys.ie = 11;\r\n    }\r\n    return Sys;\r\n}\r\n/**\r\n * 判断是否数组\r\n */\r\nexport var isArray = nativeIsArray ||\r\n    function (obj) {\r\n        return toString.call(obj) === '[object Array]';\r\n    };\r\n/**\r\n * 获取请求 url\r\n * @param para\r\n * @returns\r\n */\r\nexport function getURL(para) {\r\n    if (isString(para)) {\r\n        para = trim(para);\r\n        return _decodeURI(para);\r\n    }\r\n    else {\r\n        return _decodeURI(location.href);\r\n    }\r\n}\r\n/**\r\n * 寻找数组对应下标\r\n * @param arr\r\n * @param target\r\n * @returns\r\n */\r\nexport function indexOf(arr, target) {\r\n    var indexof = arr.indexOf;\r\n    if (indexof) {\r\n        return indexof.call(arr, target);\r\n    }\r\n    else {\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (target === arr[i])\r\n                return i;\r\n        }\r\n        return -1;\r\n    }\r\n}\r\nexport function each(obj, iterator, context) {\r\n    if (obj == null)\r\n        return false;\r\n    if (nativeForEach && obj.forEach === nativeForEach) {\r\n        obj.forEach(iterator, context);\r\n    }\r\n    else if (isArray(obj) && obj.length === +obj.length) {\r\n        for (var i = 0, l = obj.length; i < l; i++) {\r\n            if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (var key in obj) {\r\n            if (hasOwnProperty.call(obj, key)) {\r\n                if (iterator.call(context, obj[key], key, obj) === breaker) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function filter(arr, fn, self) {\r\n    var hasOwn = Object.prototype.hasOwnProperty;\r\n    if (arr.filter) {\r\n        return arr.filter(fn);\r\n    }\r\n    var ret = [];\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (!hasOwn.call(arr, i)) {\r\n            continue;\r\n        }\r\n        var val = arr[i];\r\n        if (fn.call(self, val, i, arr)) {\r\n            ret.push(val);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexport function trim(str) {\r\n    if (!str)\r\n        return '';\r\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n}\r\nexport function _decodeURIComponent(val) {\r\n    var result = val;\r\n    try {\r\n        result = decodeURIComponent(val);\r\n    }\r\n    catch (e) {\r\n        result = val;\r\n    }\r\n    return result;\r\n}\r\nexport function _decodeURI(val) {\r\n    var result = val;\r\n    try {\r\n        result = decodeURI(val);\r\n    }\r\n    catch (e) {\r\n        result = val;\r\n    }\r\n    return result;\r\n}\r\nexport function urlParse(para) {\r\n    var URLParser = function (a) {\r\n        this._fields = {\r\n            Username: 4,\r\n            Password: 5,\r\n            Port: 7,\r\n            Protocol: 2,\r\n            Host: 6,\r\n            Path: 8,\r\n            URL: 0,\r\n            QueryString: 9,\r\n            Fragment: 10,\r\n        };\r\n        this._values = {};\r\n        this._regex = null;\r\n        this._regex =\r\n            /^((\\w+):\\/\\/)?((\\w+):?(\\w+)?@)?([^\\/\\?:]+):?(\\d+)?(\\/?[^\\?#]+)?\\??([^#]+)?#?(\\w*)/;\r\n        if (typeof a != 'undefined') {\r\n            this._parse(a);\r\n        }\r\n    };\r\n    URLParser.prototype.setUrl = function (a) {\r\n        this._parse(a);\r\n    };\r\n    URLParser.prototype._initValues = function () {\r\n        for (var a in this._fields) {\r\n            this._values[a] = '';\r\n        }\r\n    };\r\n    URLParser.prototype.addQueryString = function (queryObj) {\r\n        if (typeof queryObj !== 'object') {\r\n            return false;\r\n        }\r\n        var query = this._values.QueryString || '';\r\n        for (var i in queryObj) {\r\n            if (new RegExp(i + '[^&]+').test(query)) {\r\n                query = query.replace(new RegExp(i + '[^&]+'), i + '=' + queryObj[i]);\r\n            }\r\n            else {\r\n                if (query.slice(-1) === '&') {\r\n                    query = query + i + '=' + queryObj[i];\r\n                }\r\n                else {\r\n                    if (query === '') {\r\n                        query = i + '=' + queryObj[i];\r\n                    }\r\n                    else {\r\n                        query = query + '&' + i + '=' + queryObj[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._values.QueryString = query;\r\n    };\r\n    URLParser.prototype.getUrl = function () {\r\n        var url = '';\r\n        url += this._values.Origin;\r\n        url += this._values.Port ? ':' + this._values.Port : '';\r\n        url += this._values.Path;\r\n        url += this._values.QueryString ? '?' + this._values.QueryString : '';\r\n        url += this._values.Fragment ? '#' + this._values.Fragment : '';\r\n        return url;\r\n    };\r\n    URLParser.prototype.getUrl = function () {\r\n        var url = '';\r\n        url += this._values.Origin;\r\n        url += this._values.Port ? ':' + this._values.Port : '';\r\n        url += this._values.Path;\r\n        url += this._values.QueryString ? '?' + this._values.QueryString : '';\r\n        return url;\r\n    };\r\n    URLParser.prototype._parse = function (a) {\r\n        this._initValues();\r\n        var b = this._regex.exec(a);\r\n        if (!b) {\r\n            console.log('DPURLParser::_parse -> Invalid URL');\r\n        }\r\n        for (var c in this._fields) {\r\n            if (typeof b[this._fields[c]] != 'undefined') {\r\n                this._values[c] = b[this._fields[c]];\r\n            }\r\n        }\r\n        this._values['Hostname'] = this._values['Host'].replace(/:\\d+$/, '');\r\n        this._values['Origin'] =\r\n            this._values['Protocol'] + '://' + this._values['Hostname'];\r\n    };\r\n    return new URLParser(para);\r\n}\r\nexport function _URL(url) {\r\n    var result = {};\r\n    var isURLAPIWorking = function () {\r\n        var url;\r\n        try {\r\n            url = new URL('http://modernizr.com/');\r\n            return url.href === 'http://modernizr.com/';\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    if (typeof window.URL === 'function' && isURLAPIWorking()) {\r\n        result = new URL(url);\r\n        if (!result.searchParams) {\r\n            result.searchParams = (function () {\r\n                var params = getURLSearchParams(result.search);\r\n                return {\r\n                    get: function (searchParam) {\r\n                        return params[searchParam];\r\n                    },\r\n                };\r\n            })();\r\n        }\r\n    }\r\n    else {\r\n        if (!isString(url)) {\r\n            url = String(url);\r\n        }\r\n        url = trim(url);\r\n        var _regex = /^https?:\\/\\/.+/;\r\n        if (_regex.test(url) === false) {\r\n            console.log('Invalid URL');\r\n            return;\r\n        }\r\n        var instance_1 = urlParse(url);\r\n        result.hash = '';\r\n        result.host = instance_1._values.Host\r\n            ? instance_1._values.Host +\r\n                (instance_1._values.Port ? ':' + instance_1._values.Port : '')\r\n            : '';\r\n        result.href = instance_1._values.URL;\r\n        result.password = instance_1._values.Password;\r\n        result.pathname = instance_1._values.Path;\r\n        result.port = instance_1._values.Port;\r\n        result.search = instance_1._values.QueryString\r\n            ? '?' + instance_1._values.QueryString\r\n            : '';\r\n        result.username = instance_1._values.Username;\r\n        result.hostname = instance_1._values.Hostname;\r\n        result.protocol = instance_1._values.Protocol\r\n            ? instance_1._values.Protocol + ':'\r\n            : '';\r\n        result.origin = instance_1._values.Origin\r\n            ? instance_1._values.Origin +\r\n                (instance_1._values.Port ? ':' + instance_1._values.Port : '')\r\n            : '';\r\n        result.searchParams = (function () {\r\n            var params = getURLSearchParams('?' + instance_1._values.QueryString);\r\n            return {\r\n                get: function (searchParam) {\r\n                    return params[searchParam];\r\n                },\r\n            };\r\n        })();\r\n    }\r\n    return result;\r\n}\r\nexport function getURLSearchParams(queryString) {\r\n    queryString = queryString || '';\r\n    var decodeParam = function (str) {\r\n        return _decodeURIComponent(str);\r\n    };\r\n    var args = {};\r\n    var query = queryString.substring(1);\r\n    var pairs = query.split('&');\r\n    for (var i = 0; i < pairs.length; i++) {\r\n        var pos = pairs[i].indexOf('=');\r\n        if (pos === -1)\r\n            continue;\r\n        var name_1 = pairs[i].substring(0, pos);\r\n        var value = pairs[i].substring(pos + 1);\r\n        name_1 = decodeParam(name_1);\r\n        value = decodeParam(value);\r\n        args[name_1] = value;\r\n    }\r\n    return args;\r\n}\r\nexport var getReferrer = function (referrer, full) {\r\n    referrer = referrer || document.referrer;\r\n    if (typeof referrer !== 'string') {\r\n        return '取值异常_referrer异常_' + String(referrer);\r\n    }\r\n    referrer = trim(referrer);\r\n    referrer = _decodeURI(referrer);\r\n    if (referrer.indexOf('https://www.baidu.com/') === 0 && !full) {\r\n        referrer = referrer.split('?')[0];\r\n    }\r\n    referrer = referrer.slice(0, 200);\r\n    return typeof referrer === 'string' ? referrer : '';\r\n};\r\nexport function getHostname(url, defaultValue) {\r\n    if (!url)\r\n        return;\r\n    if (!defaultValue || typeof defaultValue !== 'string') {\r\n        defaultValue = 'hostname 解析异常';\r\n    }\r\n    var hostname = null;\r\n    try {\r\n        hostname = _URL(url).hostname;\r\n    }\r\n    catch (e) {\r\n        console.log('getHostname 传入的 url 参数不合法！', e);\r\n    }\r\n    return hostname || defaultValue;\r\n}\r\n/**\r\n * 格式化 json 为字符串\r\n * @param obj\r\n * @returns\r\n */\r\nexport function formatJsonString(obj) {\r\n    try {\r\n        return JSON.stringify(obj, null, '  ');\r\n    }\r\n    catch (e) {\r\n        return JSON.stringify(obj);\r\n    }\r\n}\r\nfunction unique(ar) {\r\n    var temp, n = [], o = {};\r\n    for (var i = 0; i < ar.length; i++) {\r\n        temp = ar[i];\r\n        if (!(temp in o)) {\r\n            o[temp] = true;\r\n            n.push(temp);\r\n        }\r\n    }\r\n    return n;\r\n}\r\n/**\r\n * 获取随机数\r\n * @returns\r\n */\r\nexport function getRandom() {\r\n    if (typeof Uint32Array === 'function') {\r\n        var cry = '';\r\n        if (typeof crypto !== 'undefined') {\r\n            cry = crypto;\r\n        }\r\n        if (isObject(cry) && cry.getRandomValues) {\r\n            var typedArray = new Uint32Array(1);\r\n            var randomNumber = cry.getRandomValues(typedArray)[0];\r\n            var integerLimit = Math.pow(2, 32);\r\n            return randomNumber / integerLimit;\r\n        }\r\n    }\r\n    return getRandomBasic(10000000000000000000) / 10000000000000000000;\r\n}\r\n/**\r\n * 获取随机数\r\n */\r\nexport var getRandomBasic = (function () {\r\n    var today = new Date();\r\n    var seed = today.getTime();\r\n    function rnd() {\r\n        seed = (seed * 9301 + 49297) % 233280;\r\n        return seed / 233280.0;\r\n    }\r\n    return function rand(number) {\r\n        return Math.ceil(rnd() * number);\r\n    };\r\n})();\r\n/**\r\n * 增加 hashEvent\r\n * @param callback\r\n */\r\nexport var addHashEvent = function (callback) {\r\n    var hashEvent = 'pushState' in window.history ? 'popstate' : 'hashchange';\r\n    addEvent(window, hashEvent, callback);\r\n};\r\nexport var addEvent = function (element, type, handler) {\r\n    var makeHandler = function (element, new_handler, old_handlers, type) {\r\n        return function (event) {\r\n            if (!event)\r\n                return undefined;\r\n            event.target = event.srcElement;\r\n            var ret = true;\r\n            var old_result, new_result;\r\n            if (typeof old_handlers === 'function') {\r\n                old_result = old_handlers(event);\r\n            }\r\n            new_result = new_handler.call(element, event);\r\n            if (type !== 'beforeunload') {\r\n                if (false === old_result || false === new_result) {\r\n                    ret = false;\r\n                }\r\n                return ret;\r\n            }\r\n        };\r\n    };\r\n    if (element && element.addEventListener) {\r\n        element.addEventListener(type, function (event) {\r\n            handler(event);\r\n        }, false);\r\n    }\r\n    else {\r\n        var ontype = 'on' + type;\r\n        var old_handler = element[ontype];\r\n        element[ontype] = makeHandler(element, handler, old_handler, type);\r\n    }\r\n};\r\nexport function getElementContent(target, tagName) {\r\n    var textContent = '';\r\n    var element_content = '';\r\n    if (target.textContent) {\r\n        textContent = trim(target.textContent);\r\n    }\r\n    else if (target.innerText) {\r\n        textContent = trim(target.innerText);\r\n    }\r\n    if (textContent) {\r\n        textContent = textContent\r\n            .replace(/[\\r\\n]/g, ' ')\r\n            .replace(/[ ]+/g, ' ')\r\n            .substring(0, 255);\r\n    }\r\n    element_content = textContent || '';\r\n    if (tagName === 'input' || tagName === 'INPUT') {\r\n        if (target.type === 'button' || target.type === 'submit') {\r\n            element_content = target.value || '';\r\n        }\r\n    }\r\n    return element_content;\r\n}\r\nexport function getEleInfo(obj) {\r\n    if (!obj.target)\r\n        return false;\r\n    var target = obj.target;\r\n    var tagName = target.tagName.toLowerCase();\r\n    var props = {};\r\n    props.$element_type = tagName;\r\n    props.$element_id = target.getAttribute('id');\r\n    props.$element_name = target.getAttribute('name');\r\n    props.$element_content = getElementContent(target, tagName);\r\n    props.$element_class_name = typeof target.className === 'string' ? target.className : null;\r\n    props.$element_target_url = target.getAttribute('href');\r\n    props = strip_empty_properties(props);\r\n    props.$url = getURL();\r\n    props.$url_path = location.pathname;\r\n    props.$title = document.title;\r\n    return props;\r\n}\r\nexport function strip_empty_properties(p) {\r\n    var ret = {};\r\n    each(p, function (v, k) {\r\n        if (v != null) {\r\n            ret[k] = v;\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nexport function ry(dom) {\r\n    return new ry.init(dom);\r\n}\r\nry.init = function (dom) {\r\n    this.ele = dom;\r\n};\r\nry.init.prototype = {\r\n    previousElementSibling: function () {\r\n        var el = this.ele;\r\n        if ('previousElementSibling' in document.documentElement) {\r\n            return ry(el.previousElementSibling);\r\n        }\r\n        else {\r\n            while ((el = el.previousSibling)) {\r\n                if (el.nodeType === 1) {\r\n                    return ry(el);\r\n                }\r\n            }\r\n            return ry(null);\r\n        }\r\n    },\r\n    getSameTypeSiblings: function () {\r\n        var element = this.ele;\r\n        var parentNode = element.parentNode;\r\n        var tagName = element.tagName.toLowerCase();\r\n        var arr = [];\r\n        for (var i = 0; i < parentNode.children.length; i++) {\r\n            var child = parentNode.children[i];\r\n            if (child.nodeType === 1 && child.tagName.toLowerCase() === tagName) {\r\n                arr.push(parentNode.children[i]);\r\n            }\r\n        }\r\n        return arr;\r\n    },\r\n    getParents: function () {\r\n        try {\r\n            var element = this.ele;\r\n            if (!isElement(element)) {\r\n                return [];\r\n            }\r\n            var pathArr = [element];\r\n            if (element === null || element.parentElement === null) {\r\n                return [];\r\n            }\r\n            while (element.parentElement !== null) {\r\n                element = element.parentElement;\r\n                pathArr.push(element);\r\n            }\r\n            return pathArr;\r\n        }\r\n        catch (err) {\r\n            return [];\r\n        }\r\n    },\r\n};\r\nexport var heatmap = {\r\n    getElementPath: function (element, ignoreID, rootElement) {\r\n        var names = [];\r\n        while (element.parentNode) {\r\n            if (element.id &&\r\n                !ignoreID &&\r\n                /^[A-Za-z][-A-Za-z0-9_:.]*$/.test(element.id)) {\r\n                names.unshift(element.tagName.toLowerCase() + '#' + element.id);\r\n                break;\r\n            }\r\n            else {\r\n                if (rootElement && element === rootElement) {\r\n                    names.unshift(element.tagName.toLowerCase());\r\n                    break;\r\n                }\r\n                else if (element === document.body) {\r\n                    names.unshift('body');\r\n                    break;\r\n                }\r\n                else {\r\n                    names.unshift(element.tagName.toLowerCase());\r\n                }\r\n                element = element.parentNode;\r\n            }\r\n        }\r\n        return names.join(' > ');\r\n    },\r\n    getClosestLi: function (element) {\r\n        var getClosest = function (elem, selector) {\r\n            for (; elem && elem !== document && elem.nodeType === 1; elem = elem.parentNode) {\r\n                if (elem.tagName.toLowerCase() === selector) {\r\n                    return elem;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return getClosest(element, 'li');\r\n    },\r\n    getElementPosition: function (element, elementPath, ignoreID) {\r\n        var closestLi = heatmap.getClosestLi(element);\r\n        if (!closestLi)\r\n            return null;\r\n        var tag = element.tagName.toLowerCase();\r\n        var sameTypeTags = closestLi.getElementsByTagName(tag);\r\n        var sameTypeTagsLen = sameTypeTags.length;\r\n        var arr = [];\r\n        if (sameTypeTagsLen > 1) {\r\n            for (var i = 0; i < sameTypeTagsLen; i++) {\r\n                var elepath = heatmap.getElementPath(sameTypeTags[i], ignoreID);\r\n                if (elepath === elementPath) {\r\n                    arr.push(sameTypeTags[i]);\r\n                }\r\n            }\r\n            if (arr.length > 1) {\r\n                return indexOf(arr, element);\r\n            }\r\n        }\r\n        function _getPosition(element) {\r\n            var parentNode = element.parentNode;\r\n            if (!parentNode) {\r\n                return '';\r\n            }\r\n            var sameTypeSiblings = ry(element).getSameTypeSiblings();\r\n            var typeLen = sameTypeSiblings.length;\r\n            if (typeLen === 1) {\r\n                return 0;\r\n            }\r\n            for (var i = 0, e = element; ry(e).previousElementSibling().ele; e = ry(e).previousElementSibling().ele, i++)\r\n                ;\r\n            return i;\r\n        }\r\n        return _getPosition(closestLi);\r\n    },\r\n    getDomIndex: function (el) {\r\n        if (!el.parentNode)\r\n            return -1;\r\n        var i = 0;\r\n        var nodeName = el.tagName;\r\n        var list = el.parentNode.children;\r\n        for (var n = 0; n < list.length; n++) {\r\n            if (list[n].tagName === nodeName) {\r\n                if (el === list[n]) {\r\n                    return i;\r\n                }\r\n                else {\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    },\r\n    selector: function (el, notuseid) {\r\n        var i = el.parentNode && 9 == el.parentNode.nodeType ? -1 : this.getDomIndex(el);\r\n        if (el.getAttribute &&\r\n            el.getAttribute('id') &&\r\n            /^[A-Za-z][-A-Za-z0-9_:.]*$/.test(el.getAttribute('id')) &&\r\n            !notuseid) {\r\n            return '#' + el.getAttribute('id');\r\n        }\r\n        else {\r\n            return (el.tagName.toLowerCase() + (~i ? ':nth-of-type(' + (i + 1) + ')' : ''));\r\n        }\r\n    },\r\n    getDomSelector: function (el, arr, notuseid) {\r\n        if (!el || !el.parentNode || !el.parentNode.children) {\r\n            return false;\r\n        }\r\n        arr = arr && arr.join() ? arr : [];\r\n        var name = el.nodeName.toLowerCase();\r\n        if (!el || name === 'body' || 1 != el.nodeType) {\r\n            arr.unshift('body');\r\n            return arr.join(' > ');\r\n        }\r\n        arr.unshift(this.selector(el, notuseid));\r\n        if (el.getAttribute &&\r\n            el.getAttribute('id') &&\r\n            /^[A-Za-z][-A-Za-z0-9_:.]*$/.test(el.getAttribute('id')) &&\r\n            !notuseid)\r\n            return arr.join(' > ');\r\n        return this.getDomSelector(el.parentNode, arr, notuseid);\r\n    },\r\n    getEleDetail: function (target) {\r\n        var selector = this.getDomSelector(target);\r\n        var prop = getEleInfo({ target: target });\r\n        prop.$element_selector = selector ? selector : '';\r\n        prop.$element_path = this.getElementPath(target, 'not_use_id');\r\n        var element_position = this.getElementPosition(target, prop.$element_path, 'not_use_id');\r\n        if (isNumber(element_position)) {\r\n            prop.$element_position = element_position;\r\n        }\r\n        return prop;\r\n    },\r\n    getPointerEventProp: function (ev, target) {\r\n        if (!ev)\r\n            return {};\r\n        function getScroll() {\r\n            var scrollLeft = document.body.scrollLeft || document.documentElement.scrollLeft || 0;\r\n            var scrollTop = document.body.scrollTop || document.documentElement.scrollTop || 0;\r\n            return {\r\n                scrollLeft: scrollLeft,\r\n                scrollTop: scrollTop,\r\n            };\r\n        }\r\n        function getElementPosition(target) {\r\n            // document.documentElement.getBoundingClientRect\r\n            var targetEle = target.getBoundingClientRect();\r\n            return {\r\n                targetEleX: targetEle.left + getScroll().scrollLeft || 0,\r\n                targetEleY: targetEle.top + getScroll().scrollTop || 0,\r\n            };\r\n        }\r\n        function toFixedThree(val) {\r\n            return Number(Number(val).toFixed(3));\r\n        }\r\n        function getPage(ev) {\r\n            var pageX = ev.pageX ||\r\n                ev.clientX + getScroll().scrollLeft ||\r\n                ev.offsetX + getElementPosition(target).targetEleX ||\r\n                0;\r\n            var pageY = ev.pageY ||\r\n                ev.clientY + getScroll().scrollTop ||\r\n                ev.offsetY + getElementPosition(target).targetEleY ||\r\n                0;\r\n            return { $page_x: toFixedThree(pageX), $page_y: toFixedThree(pageY) };\r\n        }\r\n        return getPage(ev);\r\n    },\r\n};\r\nvar checkLog = {\r\n    string: function (str) {\r\n        console.log(str + ' must be string');\r\n    },\r\n    emptyString: function (str) {\r\n        console.log(str + \"'s is empty\");\r\n    },\r\n    regexTest: function (str) {\r\n        console.log(str + ' is invalid');\r\n    },\r\n    idLength: function (str) {\r\n        console.log(str + ' length is longer than ' + 255);\r\n    },\r\n    keyLength: function (str) {\r\n        console.log(str + ' length is longer than ' + 100);\r\n    },\r\n    stringLength: function (str) {\r\n        console.log(str + ' length is longer than ' + 500);\r\n    },\r\n    voidZero: function (str) {\r\n        console.log(str + \"'s is undefined\");\r\n    },\r\n    reservedLoginId: function (str) {\r\n        console.log(str + ' is invalid');\r\n    },\r\n    reservedBind: function (str) {\r\n        console.log(str + ' is invalid');\r\n    },\r\n};\r\nvar ruleOption = {\r\n    regName: /^((?!^distinct_id$|^original_id$|^time$|^properties$|^id$|^first_id$|^second_id$|^users$|^events$|^event$|^user_id$|^date$|^datetime$|^user_tag.*|^user_group.*)[a-zA-Z_$][a-zA-Z\\d_$]*)$/i,\r\n    loginIDReservedNames: ['$identity_anonymous_id', '$identity_cookie_id'],\r\n    bindReservedNames: [\r\n        '$identity_login_id',\r\n        '$identity_anonymous_id',\r\n        '$identity_cookie_id',\r\n    ],\r\n    string: function (str) {\r\n        if (!isString(str)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    emptyString: function (str) {\r\n        if (!isString(str) || trim(str).length === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    regexTest: function (str) {\r\n        if (!isString(str) || !this.regName.test(str)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    idLength: function (str) {\r\n        if (!isString(str) || str.length > 255) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    keyLength: function (str) {\r\n        if (!isString(str) || str.length > 100) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    stringLength: function (str) {\r\n        if (!isString(str) || str.length > 500) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    voidZero: function (str) {\r\n        if (str === void 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    reservedLoginId: function (str) {\r\n        if (indexOf(this.loginIDReservedNames, str) > -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n};\r\nexport var checkOption = {\r\n    distinct_id: {\r\n        rules: ['string', 'emptyString', 'idLength'],\r\n        onComplete: function (status, val, rule_type) {\r\n            if (!status) {\r\n                if (rule_type === 'emptyString') {\r\n                    val = 'Id';\r\n                }\r\n                isFunction(checkLog[rule_type]) && checkLog[rule_type](val);\r\n                if (rule_type === 'idLength') {\r\n                    return true;\r\n                }\r\n            }\r\n            return status;\r\n        },\r\n    },\r\n    event: {\r\n        rules: ['string', 'emptyString', 'keyLength', 'regexTest'],\r\n        onComplete: function (status, val, rule_type) {\r\n            if (!status) {\r\n                if (rule_type === 'emptyString') {\r\n                    val = 'eventName';\r\n                }\r\n                isFunction(checkLog[rule_type]) && checkLog[rule_type](val);\r\n            }\r\n            return true;\r\n        },\r\n    },\r\n    propertyKey: {\r\n        rules: ['string', 'emptyString', 'keyLength', 'regexTest'],\r\n        onComplete: function (status, val, rule_type) {\r\n            if (!status) {\r\n                if (rule_type === 'emptyString') {\r\n                    val = 'Property key';\r\n                }\r\n                isFunction(checkLog[rule_type]) && checkLog[rule_type](val);\r\n            }\r\n            return true;\r\n        },\r\n    },\r\n    propertyValue: {\r\n        rules: ['voidZero'],\r\n        onComplete: function (status, val, rule_type) {\r\n            if (!status) {\r\n                val = 'Property Value';\r\n                isFunction(checkLog[rule_type]) && checkLog[rule_type](val);\r\n            }\r\n            return true;\r\n        },\r\n    },\r\n    properties: function (p) {\r\n        var _this = this;\r\n        if (isObject(p)) {\r\n            each(p, function (s, k) {\r\n                _this.check({\r\n                    propertyKey: k,\r\n                });\r\n                var onComplete = function (status, val, rule_type) {\r\n                    if (!status) {\r\n                        val = k + \"'s Value\";\r\n                        isFunction(checkLog[rule_type]) && checkLog[rule_type](val);\r\n                    }\r\n                    return true;\r\n                };\r\n                _this.check({\r\n                    propertyValue: s,\r\n                }, onComplete);\r\n            });\r\n        }\r\n        else if (ruleOption.voidZero(p)) {\r\n            console.log('properties可以没有，但有的话必须是对象');\r\n        }\r\n        return true;\r\n    },\r\n    propertiesMust: function (p) {\r\n        if (!(p === undefined || !isObject(p) || isEmptyObject(p))) {\r\n            this.properties.call(this, p);\r\n        }\r\n        else {\r\n            console.log('properties 必须是对象');\r\n        }\r\n        return true;\r\n    },\r\n    item_type: {\r\n        rules: ['string', 'emptyString', 'keyLength', 'regexTest'],\r\n        onComplete: function (status, val, rule_type) {\r\n            if (!status) {\r\n                if (rule_type === 'emptyString') {\r\n                    val = 'item_type';\r\n                }\r\n                isFunction(checkLog[rule_type]) && checkLog[rule_type](val);\r\n            }\r\n            return true;\r\n        },\r\n    },\r\n    item_id: {\r\n        rules: ['string', 'emptyString', 'stringLength'],\r\n        onComplete: function (status, val, rule_type) {\r\n            if (!status) {\r\n                if (rule_type === 'emptyString') {\r\n                    val = 'item_id';\r\n                }\r\n                isFunction(checkLog[rule_type]) && checkLog[rule_type](val);\r\n            }\r\n            return true;\r\n        },\r\n    },\r\n    loginIdKey: {\r\n        rules: [\r\n            'string',\r\n            'emptyString',\r\n            'keyLength',\r\n            'regexTest',\r\n            'reservedLoginId',\r\n        ],\r\n        onComplete: function (status, val, rule_type) {\r\n            if (!status) {\r\n                if (rule_type === 'emptyString') {\r\n                    val = 'login_id_key';\r\n                }\r\n                isFunction(checkLog[rule_type]) && checkLog[rule_type](val);\r\n                if (rule_type === 'keyLength') {\r\n                    return true;\r\n                }\r\n            }\r\n            return status;\r\n        },\r\n    },\r\n    bindKey: {\r\n        rules: ['string', 'emptyString', 'keyLength', 'regexTest', 'reservedBind'],\r\n        onComplete: function (status, val, rule_type) {\r\n            if (!status) {\r\n                if (rule_type === 'emptyString') {\r\n                    val = 'Key';\r\n                }\r\n                isFunction(checkLog[rule_type]) && checkLog[rule_type](val);\r\n                if (rule_type === 'keyLength') {\r\n                    return true;\r\n                }\r\n            }\r\n            return status;\r\n        },\r\n    },\r\n    bindValue: {\r\n        rules: ['string', 'emptyString', 'idLength'],\r\n        onComplete: function (status, val, rule_type) {\r\n            if (!status) {\r\n                if (rule_type === 'emptyString') {\r\n                    val = 'Value';\r\n                }\r\n                isFunction(checkLog[rule_type]) && checkLog[rule_type](val);\r\n                if (rule_type === 'idLength') {\r\n                    return true;\r\n                }\r\n            }\r\n            return status;\r\n        },\r\n    },\r\n    check: function (a, b, onComplete) {\r\n        var checkRules = this[a];\r\n        if (isFunction(checkRules)) {\r\n            return checkRules.call(this, b);\r\n        }\r\n        else if (!checkRules) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < checkRules.rules.length; i++) {\r\n            var rule = checkRules.rules[i];\r\n            var status_1 = ruleOption[rule](b);\r\n            var result = isFunction(onComplete)\r\n                ? onComplete(status_1, b, rule)\r\n                : checkRules.onComplete(status_1, b, rule);\r\n            if (!status_1) {\r\n                return result;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n};\r\nfunction searchConfigData(data) {\r\n    if (typeof data === 'object' && data.$option) {\r\n        var data_config = data.$option;\r\n        delete data.$option;\r\n        return data_config;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nexport var kit = {};\r\nkit.encodeTrackData = function (data, props) {\r\n    var _data = deleteAttr(data);\r\n    var _dataStr = JSON.stringify(_data);\r\n    var binaryStr = gzip(_dataStr);\r\n    // 进行两次两次 base64\r\n    var dataStr = btoa(base64Encode(binaryStr));\r\n    return \"data=\".concat(encodeURIComponent(dataStr), \"&gzip=1&org=\").concat(props.org, \"&project=\").concat(props.project, \"&token=\").concat(props.token);\r\n};\r\nkit.buildData = function (p) {\r\n    var distinct_id = localStorage.getItem('distinct_id');\r\n    var data = {\r\n        distinct_id: distinct_id,\r\n        identities: {},\r\n        event: p.event,\r\n        lib: {\r\n            $lib: 'js',\r\n            $lib_method: 'code',\r\n            $lib_version: String(version),\r\n        },\r\n        type: p.type,\r\n        properties: p.properties,\r\n    };\r\n    if (data.properties.$time && isDate(data.properties.$time)) {\r\n        data.time = data.properties.$time * 1;\r\n        delete data.properties.$time;\r\n    }\r\n    else {\r\n        data.time = new Date().getTime() * 1;\r\n    }\r\n    return data;\r\n};\r\nkit.sendData = function (sa, data, callback) {\r\n    var data_config = searchConfigData(data.properties);\r\n    var senderData = __assign(__assign(__assign({}, data), data_config), { callback: callback });\r\n    var sender = new ImageSender(sa, senderData);\r\n    var start = sender.start;\r\n    sender.start = function () {\r\n        var me = this;\r\n        start.apply(this, arguments);\r\n        setTimeout(function () {\r\n            me.isEnd(true);\r\n        }, sa.callback_timeout);\r\n    };\r\n    sender.end = function () {\r\n        this.callback && this.callback();\r\n        var self = this;\r\n        setTimeout(function () {\r\n            self.lastClear && self.lastClear();\r\n        }, sa.datasend_timeout - sa.callback_timeout);\r\n    };\r\n    sender.isEnd = function () {\r\n        if (!this.received) {\r\n            this.received = true;\r\n            this.end();\r\n        }\r\n    };\r\n    sender.start();\r\n};\r\nexport function extend(obj) {\r\n    each(slice.call(arguments, 1), function (source) {\r\n        for (var prop in source) {\r\n            if (hasOwnProperty.call(source, prop) && source[prop] !== void 0) {\r\n                obj[prop] = source[prop];\r\n            }\r\n        }\r\n    });\r\n    return obj;\r\n}\r\nexport function getSendData(data) {\r\n    return kit.encodeTrackData(data);\r\n}\r\nexport function getSendUrl(url, data, props) {\r\n    var dataStr = kit.encodeTrackData(data, props);\r\n    if (url.indexOf('?') !== -1) {\r\n        return url + '&' + dataStr;\r\n    }\r\n    return url + '?' + dataStr;\r\n}\r\nexport function isValidListener(listener) {\r\n    if (typeof listener === 'function') {\r\n        return true;\r\n    }\r\n    else if (listener && typeof listener === 'object') {\r\n        return isValidListener(listener.listener);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction getCookieTopLevelDomain(hostname) {\r\n    hostname = hostname || location.hostname;\r\n    function validHostname(value) {\r\n        if (value) {\r\n            return value;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    var new_hostname = validHostname(hostname);\r\n    if (!new_hostname)\r\n        return '';\r\n    var splitResult = new_hostname.split('.');\r\n    if (isArray(splitResult) &&\r\n        splitResult.length >= 2 &&\r\n        !/^(\\d+\\.)+\\d+$/.test(new_hostname)) {\r\n        var domainStr = '.' + splitResult.splice(splitResult.length - 1, 1);\r\n        while (splitResult.length > 0) {\r\n            domainStr =\r\n                '.' + splitResult.splice(splitResult.length - 1, 1) + domainStr;\r\n            document.cookie =\r\n                'sensorsdata_domain_test=true; path=/; SameSite=Lax; domain=' +\r\n                    domainStr;\r\n            if (document.cookie.indexOf('sensorsdata_domain_test=true') !== -1) {\r\n                var now = new Date();\r\n                now.setTime(now.getTime() - 1000);\r\n                document.cookie =\r\n                    'sensorsdata_domain_test=true; expires=' +\r\n                        now.toGMTString() +\r\n                        '; path=/; SameSite=Lax; domain=' +\r\n                        domainStr;\r\n                return domainStr;\r\n            }\r\n        }\r\n    }\r\n    return '';\r\n}\r\nexport var pageInfo = {\r\n    initPage: function () {\r\n        var referrer = getReferrer();\r\n        var url = getURL();\r\n        this.pageProp = {\r\n            referrer: referrer,\r\n            referrer_host: referrer ? getHostname(referrer) : '',\r\n            url: url,\r\n            url_host: getHostname(url, 'url_host取值异常'),\r\n        };\r\n    },\r\n    pageProp: {},\r\n    properties: function () {\r\n        var viewportHeightValue = window.innerHeight ||\r\n            document.documentElement.clientHeight ||\r\n            document.body.clientHeight ||\r\n            0;\r\n        var viewportWidthValue = window.innerWidth ||\r\n            document.documentElement.clientWidth ||\r\n            document.body.clientWidth ||\r\n            0;\r\n        var propertiesObj = {\r\n            $timezone_offset: new Date().getTimezoneOffset(),\r\n            $screen_height: Number(screen.height) || 0,\r\n            $screen_width: Number(screen.width) || 0,\r\n            $viewport_height: viewportHeightValue,\r\n            $viewport_width: viewportWidthValue,\r\n            $lib: 'js',\r\n            $lib_version: version,\r\n        };\r\n        return propertiesObj;\r\n    },\r\n};\r\nexport function addSinglePageEvent(callback) {\r\n    var _a;\r\n    var current_url = location.href;\r\n    var historyPushState = window.history.pushState;\r\n    var historyReplaceState = window.history.replaceState;\r\n    if (isFunction(window.history.pushState)) {\r\n        window.history.pushState = function () {\r\n            var args = arguments;\r\n            historyPushState.apply(window.history, args);\r\n            callback(current_url);\r\n            current_url = location.href;\r\n        };\r\n    }\r\n    if (isFunction(window.history.replaceState)) {\r\n        window.history.replaceState = function () {\r\n            var args = arguments;\r\n            historyReplaceState.apply(window.history, args);\r\n            callback(current_url);\r\n            current_url = location.href;\r\n        };\r\n    }\r\n    var singlePageEvent;\r\n    if ((_a = window.document) === null || _a === void 0 ? void 0 : _a.DOCUMENT_NODE) {\r\n        singlePageEvent = 'hashchange';\r\n    }\r\n    else {\r\n        singlePageEvent = 'popstate';\r\n    }\r\n    addEvent(window, singlePageEvent, function () {\r\n        callback(current_url);\r\n        current_url = location.href;\r\n    });\r\n}\r\n/**\r\n * 清除多余上报参数\r\n * @param data\r\n * @returns\r\n */\r\nvar deleteAttr = function (data) {\r\n    delete data.properties.heatmap;\r\n    delete data.callback;\r\n    delete data.properties.server_url;\r\n    delete data.properties.send_type;\r\n    delete data.properties.org;\r\n    delete data.properties.project;\r\n    delete data.properties.token;\r\n    delete data.properties.callback_timeout;\r\n    delete data.properties.preset_properties;\r\n    delete data.properties.batch_send;\r\n    delete data.properties.datasend_timeout;\r\n    delete data.properties.cross_subdomain;\r\n    delete data.properties.is_debug;\r\n    delete data.properties.isLogin;\r\n    delete data.properties.show_log;\r\n    delete data.properties.max_id_length;\r\n    delete data.properties.max_key_length;\r\n    delete data.properties.max_string_length;\r\n    delete data.properties.max_referrer_string_length;\r\n    return data;\r\n};\r\n","references":["/Users/vannvan/Documents/vannvan@github/monorepo-explore/node_modules/.pnpm/@types+pako@2.0.0/node_modules/@types/pako/index.d.ts","/Users/vannvan/Documents/vannvan@github/monorepo-explore/packages/sensors/src/utils/saEvent.ts"],"dts":{"name":"/Users/vannvan/Documents/vannvan@github/monorepo-explore/packages/sensors/dist/types/utils/index.d.ts","writeByteOrderMark":false,"text":"export interface Props {\r\n    [key: string]: any;\r\n}\r\n/**\r\n * script 动态加载 js\r\n * @param para\r\n */\r\nexport declare const loadScript: (para: any) => void;\r\n/**\r\n * 判断是否字符串\r\n * @param obj\r\n * @returns\r\n */\r\nexport declare function isString(obj: any): boolean;\r\n/**\r\n * 判断是否对象\r\n * @param obj\r\n * @returns\r\n */\r\nexport declare const isObject: (obj: any) => boolean;\r\n/**\r\n * 判断是否函数方法\r\n * @param f\r\n * @returns\r\n */\r\nexport declare function isFunction(f: any): boolean;\r\n/**\r\n * 判断是否数字类型\r\n * @param obj\r\n * @returns\r\n */\r\nexport declare function isNumber(obj: any): boolean;\r\n/**\r\n * 判断是否 dom 类型\r\n * @param obj\r\n * @returns\r\n */\r\nexport declare function isElement(obj: any): boolean;\r\nexport declare function isEmptyObject(obj: any): boolean;\r\nexport declare function isUndefined(obj: any): boolean;\r\nexport declare function base64Encode(data: any): string;\r\n/**\r\n * get userNative\r\n * @returns\r\n */\r\nexport declare function getUA(): any;\r\n/**\r\n * 判断是否数组\r\n */\r\nexport declare const isArray: (arg: any) => arg is any[];\r\n/**\r\n * 获取请求 url\r\n * @param para\r\n * @returns\r\n */\r\nexport declare function getURL(para?: any): any;\r\n/**\r\n * 寻找数组对应下标\r\n * @param arr\r\n * @param target\r\n * @returns\r\n */\r\nexport declare function indexOf(arr: any[], target: any): number;\r\nexport declare function each(obj: any, iterator: any, context?: any): false | undefined;\r\nexport declare function filter(arr: any[], fn: any, self?: any): any[];\r\nexport declare function trim(str: string): string;\r\nexport declare function _decodeURIComponent(val: any): any;\r\nexport declare function _decodeURI(val: any): any;\r\nexport declare function urlParse(para: any): any;\r\nexport declare function _URL(url: string): any;\r\nexport declare function getURLSearchParams(queryString: string): any;\r\nexport declare const getReferrer: (referrer?: any, full?: any) => string;\r\nexport declare function getHostname(url: string, defaultValue?: any): any;\r\n/**\r\n * 格式化 json 为字符串\r\n * @param obj\r\n * @returns\r\n */\r\nexport declare function formatJsonString(obj: any): string;\r\n/**\r\n * 获取随机数\r\n * @returns\r\n */\r\nexport declare function getRandom(): number;\r\n/**\r\n * 获取随机数\r\n */\r\nexport declare const getRandomBasic: (number: number) => number;\r\n/**\r\n * 增加 hashEvent\r\n * @param callback\r\n */\r\nexport declare const addHashEvent: (callback: any) => void;\r\nexport declare const addEvent: (element: Window | any, type: any, handler: any) => void;\r\nexport declare function getElementContent(target: any, tagName: string): string;\r\nexport declare function getEleInfo(obj: any): any;\r\nexport declare function strip_empty_properties(p: any): any;\r\nexport declare function ry(dom: any): any;\r\nexport declare namespace ry {\r\n    var init: any;\r\n}\r\nexport declare const heatmap: {\r\n    getElementPath: (element: any, ignoreID: any, rootElement?: any) => string;\r\n    getClosestLi: (element: any) => any;\r\n    getElementPosition: (element: any, elementPath: any, ignoreID: any) => number | \"\" | null;\r\n    getDomIndex: (el: any) => number;\r\n    selector: (el: any, notuseid: any) => string;\r\n    getDomSelector: (this: any, el: any, arr?: any[], notuseid?: string) => any;\r\n    getEleDetail: (target: any) => any;\r\n    getPointerEventProp: (ev: any, target: any) => {};\r\n};\r\nexport declare const checkOption: {\r\n    distinct_id: {\r\n        rules: string[];\r\n        onComplete: (status: any, val: any, rule_type: any) => any;\r\n    };\r\n    event: {\r\n        rules: string[];\r\n        onComplete: (status: any, val: any, rule_type: any) => boolean;\r\n    };\r\n    propertyKey: {\r\n        rules: string[];\r\n        onComplete: (status: any, val: any, rule_type: any) => boolean;\r\n    };\r\n    propertyValue: {\r\n        rules: string[];\r\n        onComplete: (status: any, val: any, rule_type: any) => boolean;\r\n    };\r\n    properties: (p: any) => boolean;\r\n    propertiesMust: (p: any) => boolean;\r\n    item_type: {\r\n        rules: string[];\r\n        onComplete: (status: any, val: any, rule_type: any) => boolean;\r\n    };\r\n    item_id: {\r\n        rules: string[];\r\n        onComplete: (status: any, val: any, rule_type: any) => boolean;\r\n    };\r\n    loginIdKey: {\r\n        rules: string[];\r\n        onComplete: (status: any, val: any, rule_type: any) => any;\r\n    };\r\n    bindKey: {\r\n        rules: string[];\r\n        onComplete: (status: any, val: any, rule_type: any) => any;\r\n    };\r\n    bindValue: {\r\n        rules: string[];\r\n        onComplete: (status: any, val: any, rule_type: any) => any;\r\n    };\r\n    check: (this: any, a?: any, b?: any, onComplete?: any) => any;\r\n};\r\nexport declare const kit: Props;\r\nexport declare function extend(obj: any): any;\r\nexport declare function getSendData(data: any): any;\r\nexport declare function getSendUrl(url: string, data: any, props: any): string;\r\nexport declare function isValidListener(listener: any): boolean;\r\nexport declare const pageInfo: any;\r\nexport declare function addSinglePageEvent(callback: any): void;\r\n"}}
