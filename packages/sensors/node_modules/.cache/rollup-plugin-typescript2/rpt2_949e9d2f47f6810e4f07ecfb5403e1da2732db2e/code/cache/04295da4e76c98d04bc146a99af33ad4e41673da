{"code":"import { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getHostname, getReferrer, loadScript, kit, checkOption, addSinglePageEvent, trim, isArray } from \"../utils\";\r\nimport { version } from '../../package.json';\r\nimport { EventEmitter } from '../utils/saEvent';\r\nvar Web = /** @class */ (function () {\r\n    function Web() {\r\n        var _this = this;\r\n        /**\r\n         * SDK 初始化\r\n         */\r\n        this.init = function (props) { return __awaiter(_this, void 0, void 0, function () {\r\n            var distinct_id;\r\n            return __generator(this, function (_a) {\r\n                console.info('init event tracking', \"\\u7248\\u672C\\u53F7\\uFF1A\".concat(version));\r\n                distinct_id = localStorage.getItem('distinct_id');\r\n                if (!distinct_id) {\r\n                    localStorage.setItem('distinct_id', uuidv4());\r\n                }\r\n                this.initSystemEvent();\r\n                this.setInitVar();\r\n                this.initPara(props);\r\n                return [2 /*return*/];\r\n            });\r\n        }); };\r\n        /**\r\n         * 初始化全局参数\r\n         * @param props\r\n         */\r\n        this.initPara = function (props) {\r\n            _this.sa = __assign(__assign({}, _this.sa), props);\r\n            if (typeof _this.sa.server_url === 'string') {\r\n                _this.sa.server_url = trim(_this.sa.server_url);\r\n                if (_this.sa.server_url) {\r\n                    if (_this.sa.server_url.slice(0, 3) === '://') {\r\n                        _this.sa.server_url = location.protocol.slice(0, -1) + _this.sa.server_url;\r\n                    }\r\n                    else if (_this.sa.server_url.slice(0, 2) === '//') {\r\n                        _this.sa.server_url = location.protocol + _this.sa.server_url;\r\n                    }\r\n                    else if (_this.sa.server_url.slice(0, 4) !== 'http') {\r\n                        _this.sa.server_url = '';\r\n                    }\r\n                }\r\n            }\r\n            if (isArray(_this.sa.server_url) && _this.sa.server_url.length) {\r\n                for (var i = 0; i < _this.sa.server_url.length; i++) {\r\n                    if (!/s\\.gif[^\\/]*$/.test(_this.sa.server_url[i])) {\r\n                        _this.sa.server_url[i] = _this.sa.server_url[i].replace(/\\/s$/, '/s.gif').replace(/(\\/s)(\\?[^\\/]+)$/, '/s.gif$2');\r\n                    }\r\n                }\r\n            }\r\n            else if (!/s\\.gif[^\\/]*$/.test(_this.sa.server_url) && typeof _this.sa.server_url === 'string') {\r\n                _this.sa.server_url = _this.sa.server_url.replace(/\\/s$/, '/s.gif').replace(/(\\/s)(\\?[^\\/]+)$/, '/s.gif$2');\r\n            }\r\n        };\r\n        /**\r\n         * 初始化系统事件\r\n         */\r\n        this.initSystemEvent = function () {\r\n            _this.spa = new EventEmitter();\r\n            addSinglePageEvent(function (url) {\r\n                _this.spa.emit('switch', url);\r\n            });\r\n        };\r\n        /**\r\n         * 设置属性参数\r\n         */\r\n        this.setInitVar = function () {\r\n            _this.sa._t = _this.sa._t || 1 * new Date().getTime();\r\n            _this.sa.lib_version = version;\r\n            _this.sa.is_first_visitor = false;\r\n        };\r\n        /**\r\n         * 登录\r\n         */\r\n        this.login = function (distinct_id, user) { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                console.info('login event tracking...');\r\n                localStorage.setItem('distinct_id', distinct_id);\r\n                this.saEvent.send({\r\n                    type: 'profile_set',\r\n                    properties: __assign({}, user)\r\n                });\r\n                return [2 /*return*/];\r\n            });\r\n        }); };\r\n        /**\r\n         * 主动埋点事件\r\n         * @param event\r\n         * @param para\r\n         */\r\n        this.track = function (event, para) { return __awaiter(_this, void 0, void 0, function () {\r\n            var properties;\r\n            return __generator(this, function (_a) {\r\n                properties = __assign(__assign({}, this.sa), para);\r\n                this.saEvent.send({\r\n                    type: 'track',\r\n                    event: event,\r\n                    properties: properties,\r\n                });\r\n                return [2 /*return*/];\r\n            });\r\n        }); };\r\n        /**\r\n         * 设置预设属性\r\n         */\r\n        this.setPresetProperties = function (param) {\r\n            var $referrer = getReferrer() || '';\r\n            var properties = {\r\n                $sdk: param && param.$sdk || '取值异常',\r\n                $sdk_version: version,\r\n                $sdk_method: param && param.$sdk_method || '取值异常',\r\n                $referrer: $referrer,\r\n                $referrer_host: getHostname($referrer) || '',\r\n                $screen_width: window.innerWidth,\r\n                $screen_height: window.innerHeight,\r\n                $app_type: 'pc',\r\n                $app_version: param && param.$app_version || '取值异常',\r\n                $url_host: document.location.host,\r\n                $ip: _this.citySN.cip || '取值异常',\r\n                $area_code: _this.citySN.cid || '取值异常',\r\n                $user_agent: window.navigator.userAgent,\r\n                $country: _this.citySN.cname || '取值异常',\r\n                $province: _this.citySN.cname || '取值异常',\r\n                $city: _this.citySN.cname || '取值异常', // 城市\r\n            };\r\n            _this.sa = __assign(__assign({}, _this.sa), properties);\r\n        };\r\n        this.saEvent = {\r\n            check: function (p, onComplete) {\r\n                for (var i in p) {\r\n                    if (Object.prototype.hasOwnProperty.call(p, i) && !checkOption.check(i, p[i], onComplete)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n            sendItem: function (params) {\r\n                var data = {\r\n                    lib: {\r\n                        $lib: 'js',\r\n                        $lib_method: 'code',\r\n                        $lib_version: version\r\n                    },\r\n                    time: new Date().getTime() * 1\r\n                };\r\n                return Object.assign(data, params);\r\n            },\r\n            send: function (params) {\r\n                var data = kit.buildData(params);\r\n                kit.sendData(_this.sa, data);\r\n            }\r\n        };\r\n        this.sa = {\r\n            preset_properties: {\r\n                url: true,\r\n                title: true\r\n            },\r\n            login_id_key: '$identity_login_id',\r\n            img_use_crossorigin: false,\r\n            name: 'sa',\r\n            show_log: false,\r\n            is_debug: false,\r\n            send_type: 'image',\r\n            callback_timeout: 200,\r\n            datasend_timeout: 8000,\r\n        };\r\n        try {\r\n            // 获取IP\r\n            loadScript({\r\n                url: 'https://pv.sohu.com/cityjson?ie=utf-8',\r\n                type: 'js',\r\n                success: function () {\r\n                    _this.citySN = window.returnCitySN;\r\n                    _this.setPresetProperties();\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.citySN = {};\r\n            this.setPresetProperties();\r\n        }\r\n    }\r\n    return Web;\r\n}());\r\nexport default Web;\r\n","references":["/Users/vannvan/Documents/vannvan@github/monorepo-explore/node_modules/.pnpm/@types+uuid@8.3.4/node_modules/@types/uuid/index.d.ts","/Users/vannvan/Documents/vannvan@github/monorepo-explore/packages/sensors/src/utils/index.ts","/Users/vannvan/Documents/vannvan@github/monorepo-explore/packages/sensors/src/utils/saEvent.ts"],"dts":{"name":"/Users/vannvan/Documents/vannvan@github/monorepo-explore/packages/sensors/dist/types/client/web.d.ts","writeByteOrderMark":false,"text":"declare global {\r\n    interface Window {\r\n        returnCitySN: any;\r\n    }\r\n}\r\nexport declare interface ConfigProps {\r\n    org: string;\r\n    project: string;\r\n    token: string;\r\n    server_url: string;\r\n    is_single_page: boolean;\r\n    send_type: 'image';\r\n    show_log?: boolean;\r\n    heatmap?: {\r\n        clickmap?: string;\r\n        track_attr?: string[];\r\n    };\r\n}\r\ndeclare class Web {\r\n    [key: string]: any;\r\n    constructor();\r\n    /**\r\n     * SDK 初始化\r\n     */\r\n    init: (props: ConfigProps) => Promise<void>;\r\n    /**\r\n     * 初始化全局参数\r\n     * @param props\r\n     */\r\n    initPara: (props: ConfigProps) => void;\r\n    /**\r\n     * 初始化系统事件\r\n     */\r\n    initSystemEvent: () => void;\r\n    /**\r\n     * 设置属性参数\r\n     */\r\n    setInitVar: () => void;\r\n    /**\r\n     * 登录\r\n     */\r\n    login: (distinct_id: string, user: any) => Promise<void>;\r\n    /**\r\n     * 主动埋点事件\r\n     * @param event\r\n     * @param para\r\n     */\r\n    track: (event: string, para: any) => Promise<void>;\r\n    /**\r\n     * 设置预设属性\r\n     */\r\n    setPresetProperties: (param?: any) => void;\r\n    saEvent: {\r\n        check: (p: any, onComplete?: any) => boolean;\r\n        sendItem: (params: any) => any;\r\n        send: (params: any) => void;\r\n    };\r\n}\r\nexport default Web;\r\n"}}
